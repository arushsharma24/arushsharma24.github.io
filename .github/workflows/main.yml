name: Test GitHub App

on:
  workflow_dispatch:
    inputs:
      branchName:
        description: 'Branch to create or update'
        required: true
        default: 'main'

jobs:
  test-app:
    runs-on: ubuntu-latest
    steps:
    - name: Generate App Token
      id: generate_token
      uses: tibdex/github-app-token@v2
      with:
        app_id: ${{ secrets.APP_ID }}
        private_key: ${{ secrets.PRIVATE_KEY }}

    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{ steps.generate_token.outputs.token }}
        fetch-depth: 0
        clean: true
        ref: ${{ github.event.inputs.branchName }}

    - name: Configure Git
      run: |
        git config user.name "sherlock-github-app-arush[bot]"
        git config user.email "985828+sherlock-github-app-arush[bot]@users.noreply.github.com"

    - name: Create test file
      run: |
        mkdir -p tests
        echo "This is a test file created by the GitHub App" > tests/test_file.txt
        git add tests/test_file.txt

    - name: Generate test names
      id: test_gen
      run: |
        echo "test_names=Test Suite $(date +%s)" >> $GITHUB_OUTPUT

    - name: Generate test summary
      id: test_gen_summary
      run: |
        echo "summary=This PR includes automated tests generated by the GitHub App." >> $GITHUB_OUTPUT

    - name: Commit changes
      run: |
        git commit -m "test: ${{ steps.test_gen.outputs.test_names }}"

    - name: Create Pull Request
      id: cpr
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ steps.generate_token.outputs.token }}
        base: main
        branch: test-pr-${{ github.run_id }}
        delete-branch: true
        title: "test: ${{ steps.test_gen.outputs.test_names }}"
        body: |
          ${{ steps.test_gen_summary.outputs.summary }}
        labels: |
          automated
          test
        commit-message: "test: ${{ steps.test_gen.outputs.test_names }}"

    - name: Check outputs
      if: steps.cpr.outputs.pull-request-number
      run: |
        echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
        echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"

    - name: Extract project name from repo
      id: project_name
      run: |
        echo "name=$(basename "${{ github.repository }}" | sed -E 's/-[^-]+$//')" >> $GITHUB_OUTPUT

    - name: Push changes if not main
      if: github.event.inputs.branchName != 'main'
      run: |
        git push origin ${{ github.event.inputs.branchName }}
